// Code generated by govalid; DO NOT EDIT.
package minitems

import (
	"errors"
	govaliderrors "github.com/sivchari/govalid/validation/errors"
)

var (
	// ErrNilMinItems is returned when the MinItems is nil.
	ErrNilMinItems = errors.New("input MinItems is nil")

	// ErrMinItemsSliceMinItemsValidation is the error returned when the length of the field is less than the minimum of 2.
	ErrMinItemsSliceMinItemsValidation = govaliderrors.ValidationError{Reason: "field MinItemsSlice must have a minimum of 2 items"}

	// ErrMinItemsArrayMinItemsValidation is the error returned when the length of the field is less than the minimum of 3.
	ErrMinItemsArrayMinItemsValidation = govaliderrors.ValidationError{Reason: "field MinItemsArray must have a minimum of 3 items"}

	// ErrMinItemsMapFieldMinItemsValidation is the error returned when the length of the field is less than the minimum of 1.
	ErrMinItemsMapFieldMinItemsValidation = govaliderrors.ValidationError{Reason: "field MinItemsMapField must have a minimum of 1 items"}

	// ErrMinItemsChanFieldMinItemsValidation is the error returned when the length of the field is less than the minimum of 2.
	ErrMinItemsChanFieldMinItemsValidation = govaliderrors.ValidationError{Reason: "field MinItemsChanField must have a minimum of 2 items"}

	// ErrMinItemsItemsMinItemsValidation is the error returned when the length of the field is less than the minimum of 1.
	ErrMinItemsItemsMinItemsValidation = govaliderrors.ValidationError{Reason: "field MinItemsItems must have a minimum of 1 items"}
)

func ValidateMinItems(t *MinItems) error {
	if t == nil {
		return ErrNilMinItems
	}

	var errs govaliderrors.ValidationErrors

	if len(t.Slice) < 2 {
		err := ErrMinItemsSliceMinItemsValidation
		err.Value = t.Slice
		errs = append(errs, err)
	}

	if len(t.Array) < 3 {
		err := ErrMinItemsArrayMinItemsValidation
		err.Value = t.Array
		errs = append(errs, err)
	}

	if len(t.MapField) < 1 {
		err := ErrMinItemsMapFieldMinItemsValidation
		err.Value = t.MapField
		errs = append(errs, err)
	}

	if len(t.ChanField) < 2 {
		err := ErrMinItemsChanFieldMinItemsValidation
		err.Value = t.ChanField
		errs = append(errs, err)
	}

	{
		t := t.Struct

		if len(t.Items) < 1 {
			err := ErrMinItemsItemsMinItemsValidation
			err.Value = t.Items
			errs = append(errs, err)
		}

	}

	if len(errs) > 0 {
		return errs
	}
	return nil
}
