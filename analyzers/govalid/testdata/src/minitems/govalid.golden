// Code generated by govalid; DO NOT EDIT.
package minitems

import (
	"errors"
)

var (
	// ErrNilMinItems is returned when the MinItems is nil.
	ErrNilMinItems = errors.New("input MinItems is nil")

	// ErrSliceMinItemsValidation is the error returned when the length of the field is less than the minimum of 2.
	ErrSliceMinItemsValidation = errors.New("field Slice must have a minimum of 2 items")

	// ErrArrayMinItemsValidation is the error returned when the length of the field is less than the minimum of 3.
	ErrArrayMinItemsValidation = errors.New("field Array must have a minimum of 3 items")

	// ErrMapFieldMinItemsValidation is the error returned when the length of the field is less than the minimum of 1.
	ErrMapFieldMinItemsValidation = errors.New("field MapField must have a minimum of 1 items")

	// ErrChanFieldMinItemsValidation is the error returned when the length of the field is less than the minimum of 2.
	ErrChanFieldMinItemsValidation = errors.New("field ChanField must have a minimum of 2 items")

	// ErrItemsMinItemsValidation is the error returned when the length of the field is less than the minimum of 1.
	ErrItemsMinItemsValidation = errors.New("field Items must have a minimum of 1 items")
)

func ValidateMinItems(t *MinItems) error {
	if t == nil {
		return ErrNilMinItems
	}

	if len(t.Slice) < 2 {
		return ErrSliceMinItemsValidation
	}

	if len(t.Array) < 3 {
		return ErrArrayMinItemsValidation
	}

	if len(t.MapField) < 1 {
		return ErrMapFieldMinItemsValidation
	}

	if len(t.ChanField) < 2 {
		return ErrChanFieldMinItemsValidation
	}

	{
		t := t.Struct

		if len(t.Items) < 1 {
			return ErrItemsMinItemsValidation
		}

	}

	return nil
}
