// Code generated by govalid; DO NOT EDIT.
package required

import (
	"errors"
)

var (
	// ErrNilRequired is returned when the Required is nil.
	ErrNilRequired = errors.New("input Required is nil")

	// ErrStringRequiredValidation is returned when the String is required but not provided.
	ErrStringRequiredValidation = errors.New("field String is required")

	// ErrIntRequiredValidation is returned when the Int is required but not provided.
	ErrIntRequiredValidation = errors.New("field Int is required")

	// ErrArrayRequiredValidation is returned when the Array is required but not provided.
	ErrArrayRequiredValidation = errors.New("field Array is required")

	// ErrSliceRequiredValidation is returned when the Slice is required but not provided.
	ErrSliceRequiredValidation = errors.New("field Slice is required")

	// ErrMapRequiredValidation is returned when the Map is required but not provided.
	ErrMapRequiredValidation = errors.New("field Map is required")

	// ErrInterfaceRequiredValidation is returned when the Interface is required but not provided.
	ErrInterfaceRequiredValidation = errors.New("field Interface is required")

	// ErrAnyRequiredValidation is returned when the Any is required but not provided.
	ErrAnyRequiredValidation = errors.New("field Any is required")

	// ErrPointerRequiredValidation is returned when the Pointer is required but not provided.
	ErrPointerRequiredValidation = errors.New("field Pointer is required")

	// ErrEntireRequiredStructNameRequiredValidation is returned when the EntireRequiredStructName is required but not provided.
	ErrEntireRequiredStructNameRequiredValidation = errors.New("field EntireRequiredStructName is required")

	// ErrPartialStructStringRequiredValidation is returned when the PartialStructString is required but not provided.
	ErrPartialStructStringRequiredValidation = errors.New("field PartialStructString is required")

	// ErrNested2StringRequiredValidation is returned when the Nested2String is required but not provided.
	ErrNested2StringRequiredValidation = errors.New("field Nested2String is required")

	// ErrChannelRequiredValidation is returned when the Channel is required but not provided.
	ErrChannelRequiredValidation = errors.New("field Channel is required")

	// ErrFuncRequiredValidation is returned when the Func is required but not provided.
	ErrFuncRequiredValidation = errors.New("field Func is required")

	// ErrNamedRequiredValidation is returned when the Named is required but not provided.
	ErrNamedRequiredValidation = errors.New("field Named is required")
)

func ValidateRequired(t *Required) error {
	if t == nil {
		return ErrNilRequired
	}

	if t.String == "" {
		return ErrStringRequiredValidation
	}

	if t.Int == 0 {
		return ErrIntRequiredValidation
	}

	if len(t.Array) == 0 {
		return ErrArrayRequiredValidation
	}

	if t.Slice == nil {
		return ErrSliceRequiredValidation
	}

	if t.Map == nil {
		return ErrMapRequiredValidation
	}

	if t.Interface == nil {
		return ErrInterfaceRequiredValidation
	}

	if t.Any == nil {
		return ErrAnyRequiredValidation
	}

	if t.Pointer == nil {
		return ErrPointerRequiredValidation
	}

	{
		t := t.EntireRequiredStruct

		if t.EntireRequiredStructName == "" {
			return ErrEntireRequiredStructNameRequiredValidation
		}

	}

	{
		t := t.PartialStruct

		if t.PartialStructString == "" {
			return ErrPartialStructStringRequiredValidation
		}

	}

	{
		t := t.NestedStruct.Nested2

		if t.Nested2String == "" {
			return ErrNested2StringRequiredValidation
		}

	}

	{
		t := t.OtherNestedStruct.Nested2

		if t.Nested2String == "" {
			return ErrNested2StringRequiredValidation
		}

	}

	if t.Channel == nil {
		return ErrChannelRequiredValidation
	}

	if t.Func == nil {
		return ErrFuncRequiredValidation
	}

	if t.Named == "" {
		return ErrNamedRequiredValidation
	}

	return nil
}
