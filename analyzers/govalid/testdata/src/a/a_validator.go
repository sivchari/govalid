// Code generated by govalid; DO NOT EDIT.
package a

import (
	"errors"
	"fmt"
)

var (
	// ErrNilUser is returned when the User is nil.
	ErrNilUser = errors.New("input User is nil")

	// Err String is returned when the String is required but not provided.
	ErrString = errors.New("field String is required")

	// Err Int is returned when the Int is required but not provided.
	ErrInt = errors.New("field Int is required")

	// Err Array is returned when the Array is required but not provided.
	ErrArray = errors.New("field Array is required")

	// Err Slice is returned when the Slice is required but not provided.
	ErrSlice = errors.New("field Slice is required")

	// Err Map is returned when the Map is required but not provided.
	ErrMap = errors.New("field Map is required")

	// Err Pointer is returned when the Pointer is required but not provided.
	ErrPointer = errors.New("field Pointer is required")

	// Err Struct is returned when the Struct is required but not provided.
	ErrStruct = errors.New("field Struct is required")

	// Err Channel is returned when the Channel is required but not provided.
	ErrChannel = errors.New("field Channel is required")
)

func ValidateUser(t *User) error {
	if t == nil {
		return ErrNilUser
	}

	if t.String == "" {
		return ErrString
	}

	if t.Int == 0 {
		return ErrInt
	}

	if len(t.Array) == 0 {
		return ErrArray
	}

	if len(t.Slice) == 0 {
		return ErrSlice
	}

	if len(t.Map) == 0 {
		return ErrMap
	}

	if t.Pointer == nil {
		return ErrPointer
	}

	if t.Struct == nil {
		return ErrStruct
	}

	if len(t.Channel) == 0 {
		return ErrChannel
	}

	return nil
}
