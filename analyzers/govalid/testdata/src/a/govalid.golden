// Code generated by govalid; DO NOT EDIT.
package a

import (
	"errors"
)

var (
	// ErrNilUser is returned when the User is nil.
	ErrNilUser = errors.New("input User is nil")

	// Err String is returned when the String is required but not provided.
	ErrStringRequired = errors.New("field String is required")

	// Err Int is returned when the Int is required but not provided.
	ErrIntRequired = errors.New("field Int is required")

	// Err Array is returned when the Array is required but not provided.
	ErrArrayRequired = errors.New("field Array is required")

	// Err Slice is returned when the Slice is required but not provided.
	ErrSliceRequired = errors.New("field Slice is required")

	// Err Map is returned when the Map is required but not provided.
	ErrMapRequired = errors.New("field Map is required")

	// Err Interface is returned when the Interface is required but not provided.
	ErrInterfaceRequired = errors.New("field Interface is required")

	// Err Any is returned when the Any is required but not provided.
	ErrAnyRequired = errors.New("field Any is required")

	// Err Pointer is returned when the Pointer is required but not provided.
	ErrPointerRequired = errors.New("field Pointer is required")

	// Err EntireRequiredStructName is returned when the EntireRequiredStructName is required but not provided.
	ErrEntireRequiredStructNameRequired = errors.New("field EntireRequiredStructName is required")

	// Err PartialStructString is returned when the PartialStructString is required but not provided.
	ErrPartialStructStringRequired = errors.New("field PartialStructString is required")

	// Err Nested2String is returned when the Nested2String is required but not provided.
	ErrNested2StringRequired = errors.New("field Nested2String is required")

	// Err Channel is returned when the Channel is required but not provided.
	ErrChannelRequired = errors.New("field Channel is required")

	// Err Func is returned when the Func is required but not provided.
	ErrFuncRequired = errors.New("field Func is required")

	// Err Named is returned when the Named is required but not provided.
	ErrNamedRequired = errors.New("field Named is required")
)

func ValidateUser(t *User) error {
	if t == nil {
		return ErrNilUser
	}

	if t.String == "" {
		return ErrStringRequired
	}

	if t.Int == 0 {
		return ErrIntRequired
	}

	if len(t.Array) == 0 {
		return ErrArrayRequired
	}

	if len(t.Slice) == 0 {
		return ErrSliceRequired
	}

	if len(t.Map) == 0 {
		return ErrMapRequired
	}

	if t.Interface == nil {
		return ErrInterfaceRequired
	}

	if t.Any == nil {
		return ErrAnyRequired
	}

	if t.Pointer == nil {
		return ErrPointerRequired
	}

	{
		t := t.EntireRequiredStruct

		if t.EntireRequiredStructName == "" {
			return ErrEntireRequiredStructNameRequired
		}

	}

	{
		t := t.PartialStruct

		if t.PartialStructString == "" {
			return ErrPartialStructStringRequired
		}

	}

	{
		t := t.NestedStruct.Nested2

		if t.Nested2String == "" {
			return ErrNested2StringRequired
		}

	}

	{
		t := t.OtherNestedStruct.Nested2

		if t.Nested2String == "" {
			return ErrNested2StringRequired
		}

	}

	if len(t.Channel) == 0 {
		return ErrChannelRequired
	}

	if t.Func == nil {
		return ErrFuncRequired
	}

	if t.Named == "" {
		return ErrNamedRequired
	}

	return nil
}
