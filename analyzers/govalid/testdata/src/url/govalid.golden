// Code generated by govalid; DO NOT EDIT.
package url

import (
	"errors"
	"github.com/sivchari/govalid/validation/validationhelper"
)

var (
	// ErrNilURL is returned when the URL is nil.
	ErrNilURL = errors.New("input URL is nil")

	// ErrURLWebsiteURLURLValidation is the error returned when the field is not a valid URL.
	ErrURLWebsiteURLURLValidation = errors.New("field URLWebsiteURL must be a valid URL")

	// ErrURLHomepageURLURLValidation is the error returned when the field is not a valid URL.
	ErrURLHomepageURLURLValidation = errors.New("field URLHomepageURL must be a valid URL")

	// ErrURLApiURLURLValidation is the error returned when the field is not a valid URL.
	ErrURLApiURLURLValidation = errors.New("field URLApiURL must be a valid URL")

	// ErrURLProfileURLURLValidation is the error returned when the field is not a valid URL.
	ErrURLProfileURLURLValidation = errors.New("field URLProfileURL must be a valid URL")

	// ErrURLDownloadURLURLValidation is the error returned when the field is not a valid URL.
	ErrURLDownloadURLURLValidation = errors.New("field URLDownloadURL must be a valid URL")
)

func ValidateURL(t *URL) error {
	if t == nil {
		return ErrNilURL
	}

	if !validationhelper.IsValidURL(t.WebsiteURL) {
		return ErrURLWebsiteURLURLValidation
	}

	if !validationhelper.IsValidURL(t.HomepageURL) {
		return ErrURLHomepageURLURLValidation
	}

	if !validationhelper.IsValidURL(t.ApiURL) {
		return ErrURLApiURLURLValidation
	}

	if !validationhelper.IsValidURL(t.ProfileURL) {
		return ErrURLProfileURLURLValidation
	}

	if !validationhelper.IsValidURL(t.DownloadURL) {
		return ErrURLDownloadURLURLValidation
	}

	return nil
}
