// Code generated by govalid; DO NOT EDIT.
package min

import (
	"errors"
)

var (
	// ErrNilMin is returned when the Min is nil.
	ErrNilMin = errors.New("input Min is nil")

	// ErrIntMin is the error returned when the value of the field is less than the minimum value.
	ErrIntMin = errors.New("field Int must be greater than or equal to the minimum value")

	// ErrInt8Min is the error returned when the value of the field is less than the minimum value.
	ErrInt8Min = errors.New("field Int8 must be greater than or equal to the minimum value")

	// ErrInt16Min is the error returned when the value of the field is less than the minimum value.
	ErrInt16Min = errors.New("field Int16 must be greater than or equal to the minimum value")

	// ErrInt32Min is the error returned when the value of the field is less than the minimum value.
	ErrInt32Min = errors.New("field Int32 must be greater than or equal to the minimum value")

	// ErrInt64Min is the error returned when the value of the field is less than the minimum value.
	ErrInt64Min = errors.New("field Int64 must be greater than or equal to the minimum value")

	// ErrFloat32Min is the error returned when the value of the field is less than the minimum value.
	ErrFloat32Min = errors.New("field Float32 must be greater than or equal to the minimum value")

	// ErrFloat64Min is the error returned when the value of the field is less than the minimum value.
	ErrFloat64Min = errors.New("field Float64 must be greater than or equal to the minimum value")

	// ErrUintMin is the error returned when the value of the field is less than the minimum value.
	ErrUintMin = errors.New("field Uint must be greater than or equal to the minimum value")

	// ErrUint8Min is the error returned when the value of the field is less than the minimum value.
	ErrUint8Min = errors.New("field Uint8 must be greater than or equal to the minimum value")

	// ErrUint16Min is the error returned when the value of the field is less than the minimum value.
	ErrUint16Min = errors.New("field Uint16 must be greater than or equal to the minimum value")

	// ErrUint32Min is the error returned when the value of the field is less than the minimum value.
	ErrUint32Min = errors.New("field Uint32 must be greater than or equal to the minimum value")

	// ErrUint64Min is the error returned when the value of the field is less than the minimum value.
	ErrUint64Min = errors.New("field Uint64 must be greater than or equal to the minimum value")

	// ErrUintptrMin is the error returned when the value of the field is less than the minimum value.
	ErrUintptrMin = errors.New("field Uintptr must be greater than or equal to the minimum value")

	// ErrComplex64Min is the error returned when the value of the field is less than the minimum value.
	ErrComplex64Min = errors.New("field Complex64 must be greater than or equal to the minimum value")

	// ErrComplex128Min is the error returned when the value of the field is less than the minimum value.
	ErrComplex128Min = errors.New("field Complex128 must be greater than or equal to the minimum value")
)

func ValidateMin(t *Min) error {
	if t == nil {
		return ErrNilMin
	}

	if t.Int < 1 {
		return ErrIntMin
	}

	if t.Int8 < 1 {
		return ErrInt8Min
	}

	if t.Int16 < 1 {
		return ErrInt16Min
	}

	if t.Int32 < 1 {
		return ErrInt32Min
	}

	if t.Int64 < 1 {
		return ErrInt64Min
	}

	if t.Float32 < 1 {
		return ErrFloat32Min
	}

	if t.Float64 < 1 {
		return ErrFloat64Min
	}

	if t.Uint < 1 {
		return ErrUintMin
	}

	if t.Uint8 < 1 {
		return ErrUint8Min
	}

	if t.Uint16 < 1 {
		return ErrUint16Min
	}

	if t.Uint32 < 1 {
		return ErrUint32Min
	}

	if t.Uint64 < 1 {
		return ErrUint64Min
	}

	if t.Uintptr < 1 {
		return ErrUintptrMin
	}

	if t.Complex64 < 1 {
		return ErrComplex64Min
	}

	if t.Complex128 < 1 {
		return ErrComplex128Min
	}

	{
		t := t.Struct

		if t.Int < 1 {
			return ErrIntMin
		}

	}

	return nil
}
