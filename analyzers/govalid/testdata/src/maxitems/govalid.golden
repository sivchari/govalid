// Code generated by govalid; DO NOT EDIT.
package maxitems

import (
	"errors"
)

var (
	// ErrNilMaxItems is returned when the MaxItems is nil.
	ErrNilMaxItems = errors.New("input MaxItems is nil")

	// ErrMaxItemsSliceMaxItemsValidation is the error returned when the length of the field exceeds the maximum of 5.
	ErrMaxItemsSliceMaxItemsValidation = errors.New("field MaxItemsSlice must have a maximum of 5 items")

	// ErrMaxItemsArrayMaxItemsValidation is the error returned when the length of the field exceeds the maximum of 3.
	ErrMaxItemsArrayMaxItemsValidation = errors.New("field MaxItemsArray must have a maximum of 3 items")

	// ErrMaxItemsMapFieldMaxItemsValidation is the error returned when the length of the field exceeds the maximum of 4.
	ErrMaxItemsMapFieldMaxItemsValidation = errors.New("field MaxItemsMapField must have a maximum of 4 items")

	// ErrMaxItemsChanFieldMaxItemsValidation is the error returned when the length of the field exceeds the maximum of 2.
	ErrMaxItemsChanFieldMaxItemsValidation = errors.New("field MaxItemsChanField must have a maximum of 2 items")

	// ErrMaxItemsItemsMaxItemsValidation is the error returned when the length of the field exceeds the maximum of 2.
	ErrMaxItemsItemsMaxItemsValidation = errors.New("field MaxItemsItems must have a maximum of 2 items")
)

func ValidateMaxItems(t *MaxItems) error {
	if t == nil {
		return ErrNilMaxItems
	}

	if len(t.Slice) > 5 {
		return ErrMaxItemsSliceMaxItemsValidation
	}

	if len(t.Array) > 3 {
		return ErrMaxItemsArrayMaxItemsValidation
	}

	if len(t.MapField) > 4 {
		return ErrMaxItemsMapFieldMaxItemsValidation
	}

	if len(t.ChanField) > 2 {
		return ErrMaxItemsChanFieldMaxItemsValidation
	}

	{
		t := t.Struct

		if len(t.Items) > 2 {
			return ErrMaxItemsItemsMaxItemsValidation
		}

	}

	return nil
}
