// Code generated by govalid; DO NOT EDIT.
package lt

import (
	"errors"
)

var (
	// ErrNilLT is returned when the LT is nil.
	ErrNilLT = errors.New("input LT is nil")

	// ErrIntLTValidation is the error returned when the value of the field is greater than the 1.
	ErrIntLTValidation = errors.New("field Int must be less than 1")

	// ErrInt8LTValidation is the error returned when the value of the field is greater than the 1.
	ErrInt8LTValidation = errors.New("field Int8 must be less than 1")

	// ErrInt16LTValidation is the error returned when the value of the field is greater than the 1.
	ErrInt16LTValidation = errors.New("field Int16 must be less than 1")

	// ErrInt32LTValidation is the error returned when the value of the field is greater than the 1.
	ErrInt32LTValidation = errors.New("field Int32 must be less than 1")

	// ErrInt64LTValidation is the error returned when the value of the field is greater than the 1.
	ErrInt64LTValidation = errors.New("field Int64 must be less than 1")

	// ErrFloat32LTValidation is the error returned when the value of the field is greater than the 1.
	ErrFloat32LTValidation = errors.New("field Float32 must be less than 1")

	// ErrFloat64LTValidation is the error returned when the value of the field is greater than the 1.
	ErrFloat64LTValidation = errors.New("field Float64 must be less than 1")

	// ErrUintLTValidation is the error returned when the value of the field is greater than the 1.
	ErrUintLTValidation = errors.New("field Uint must be less than 1")

	// ErrUint8LTValidation is the error returned when the value of the field is greater than the 1.
	ErrUint8LTValidation = errors.New("field Uint8 must be less than 1")

	// ErrUint16LTValidation is the error returned when the value of the field is greater than the 1.
	ErrUint16LTValidation = errors.New("field Uint16 must be less than 1")

	// ErrUint32LTValidation is the error returned when the value of the field is greater than the 1.
	ErrUint32LTValidation = errors.New("field Uint32 must be less than 1")

	// ErrUint64LTValidation is the error returned when the value of the field is greater than the 1.
	ErrUint64LTValidation = errors.New("field Uint64 must be less than 1")

	// ErrUintptrLTValidation is the error returned when the value of the field is greater than the 1.
	ErrUintptrLTValidation = errors.New("field Uintptr must be less than 1")

	// ErrComplex64LTValidation is the error returned when the value of the field is greater than the 1.
	ErrComplex64LTValidation = errors.New("field Complex64 must be less than 1")

	// ErrComplex128LTValidation is the error returned when the value of the field is greater than the 1.
	ErrComplex128LTValidation = errors.New("field Complex128 must be less than 1")
)

func ValidateLT(t *LT) error {
	if t == nil {
		return ErrNilLT
	}

	if !(t.Int < 1) {
		return ErrIntLTValidation
	}

	if !(t.Int8 < 1) {
		return ErrInt8LTValidation
	}

	if !(t.Int16 < 1) {
		return ErrInt16LTValidation
	}

	if !(t.Int32 < 1) {
		return ErrInt32LTValidation
	}

	if !(t.Int64 < 1) {
		return ErrInt64LTValidation
	}

	if !(t.Float32 < 1) {
		return ErrFloat32LTValidation
	}

	if !(t.Float64 < 1) {
		return ErrFloat64LTValidation
	}

	if !(t.Uint < 1) {
		return ErrUintLTValidation
	}

	if !(t.Uint8 < 1) {
		return ErrUint8LTValidation
	}

	if !(t.Uint16 < 1) {
		return ErrUint16LTValidation
	}

	if !(t.Uint32 < 1) {
		return ErrUint32LTValidation
	}

	if !(t.Uint64 < 1) {
		return ErrUint64LTValidation
	}

	if !(t.Uintptr < 1) {
		return ErrUintptrLTValidation
	}

	if !(t.Complex64 < 1) {
		return ErrComplex64LTValidation
	}

	if !(t.Complex128 < 1) {
		return ErrComplex128LTValidation
	}

	{
		t := t.Struct

		if !(t.Int < 1) {
			return ErrIntLTValidation
		}

	}

	return nil
}
