// Code generated by govalid; DO NOT EDIT.
package inside

import (
	"errors"
	govaliderrors "github.com/sivchari/govalid/validation/errors"
)

var (
	// ErrNilInside is returned when the Inside is nil.
	ErrNilInside = errors.New("input Inside is nil")

	// ErrInsideAXRequiredValidation is returned when the X is required but not provided.
	ErrInsideAXRequiredValidation = govaliderrors.ValidationError{Reason: "field X is required", Path: "Inside.A.X", Type: "required"}
)

func ValidateInside(t *Inside) error {
	if t == nil {
		return ErrNilInside
	}

	var errs govaliderrors.ValidationErrors

	{
		t := t.A

		if t.X == "" {
			err := ErrInsideAXRequiredValidation
			err.Value = t.X
			errs = append(errs, err)
		}

	}

	if len(errs) > 0 {
		return errs
	}
	return nil
}
