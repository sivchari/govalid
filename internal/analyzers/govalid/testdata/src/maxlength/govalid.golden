// Code generated by govalid; DO NOT EDIT.
package maxlength

import (
	"errors"
	govaliderrors "github.com/sivchari/govalid/validation/errors"
	"unicode/utf8"
)

var (
	// ErrNilMaxLength is returned when the MaxLength is nil.
	ErrNilMaxLength = errors.New("input MaxLength is nil")

	// ErrMaxLengthStringMaxLengthValidation is the error returned when the length of the field exceeds the maximum of 10.
	ErrMaxLengthStringMaxLengthValidation = govaliderrors.ValidationError{Reason: "field String must have a maximum length of 10", Path: "MaxLength.String", Type: "maxlength"}

	// ErrMaxLengthNameMaxLengthValidation is the error returned when the length of the field exceeds the maximum of 20.
	ErrMaxLengthNameMaxLengthValidation = govaliderrors.ValidationError{Reason: "field Name must have a maximum length of 20", Path: "MaxLength.Name", Type: "maxlength"}
)

func ValidateMaxLength(t *MaxLength) error {
	if t == nil {
		return ErrNilMaxLength
	}

	var errs govaliderrors.ValidationErrors

	if utf8.RuneCountInString(t.String) > 10 {
		err := ErrMaxLengthStringMaxLengthValidation
		err.Value = t.String
		errs = append(errs, err)
	}

	{
		t := t.Struct

		if utf8.RuneCountInString(t.Name) > 20 {
			err := ErrMaxLengthNameMaxLengthValidation
			err.Value = t.Name
			errs = append(errs, err)
		}

	}

	if len(errs) > 0 {
		return errs
	}
	return nil
}
