// Code generated by govalid; DO NOT EDIT.
package lt

import (
	"errors"
)

var (
	// ErrNilLT is returned when the LT is nil.
	ErrNilLT = errors.New("input LT is nil")

	// ErrLTIntLTValidation is the error returned when the value of the field is greater than the 1.
	ErrLTIntLTValidation = errors.New("field LTInt must be less than 1")

	// ErrLTInt8LTValidation is the error returned when the value of the field is greater than the 1.
	ErrLTInt8LTValidation = errors.New("field LTInt8 must be less than 1")

	// ErrLTInt16LTValidation is the error returned when the value of the field is greater than the 1.
	ErrLTInt16LTValidation = errors.New("field LTInt16 must be less than 1")

	// ErrLTInt32LTValidation is the error returned when the value of the field is greater than the 1.
	ErrLTInt32LTValidation = errors.New("field LTInt32 must be less than 1")

	// ErrLTInt64LTValidation is the error returned when the value of the field is greater than the 1.
	ErrLTInt64LTValidation = errors.New("field LTInt64 must be less than 1")

	// ErrLTFloat32LTValidation is the error returned when the value of the field is greater than the 1.
	ErrLTFloat32LTValidation = errors.New("field LTFloat32 must be less than 1")

	// ErrLTFloat64LTValidation is the error returned when the value of the field is greater than the 1.
	ErrLTFloat64LTValidation = errors.New("field LTFloat64 must be less than 1")

	// ErrLTUintLTValidation is the error returned when the value of the field is greater than the 1.
	ErrLTUintLTValidation = errors.New("field LTUint must be less than 1")

	// ErrLTUint8LTValidation is the error returned when the value of the field is greater than the 1.
	ErrLTUint8LTValidation = errors.New("field LTUint8 must be less than 1")

	// ErrLTUint16LTValidation is the error returned when the value of the field is greater than the 1.
	ErrLTUint16LTValidation = errors.New("field LTUint16 must be less than 1")

	// ErrLTUint32LTValidation is the error returned when the value of the field is greater than the 1.
	ErrLTUint32LTValidation = errors.New("field LTUint32 must be less than 1")

	// ErrLTUint64LTValidation is the error returned when the value of the field is greater than the 1.
	ErrLTUint64LTValidation = errors.New("field LTUint64 must be less than 1")

	// ErrLTUintptrLTValidation is the error returned when the value of the field is greater than the 1.
	ErrLTUintptrLTValidation = errors.New("field LTUintptr must be less than 1")

	// ErrLTComplex64LTValidation is the error returned when the value of the field is greater than the 1.
	ErrLTComplex64LTValidation = errors.New("field LTComplex64 must be less than 1")

	// ErrLTComplex128LTValidation is the error returned when the value of the field is greater than the 1.
	ErrLTComplex128LTValidation = errors.New("field LTComplex128 must be less than 1")
)

func ValidateLT(t *LT) error {
	if t == nil {
		return ErrNilLT
	}

	if !(t.Int < 1) {
		return ErrLTIntLTValidation
	}

	if !(t.Int8 < 1) {
		return ErrLTInt8LTValidation
	}

	if !(t.Int16 < 1) {
		return ErrLTInt16LTValidation
	}

	if !(t.Int32 < 1) {
		return ErrLTInt32LTValidation
	}

	if !(t.Int64 < 1) {
		return ErrLTInt64LTValidation
	}

	if !(t.Float32 < 1) {
		return ErrLTFloat32LTValidation
	}

	if !(t.Float64 < 1) {
		return ErrLTFloat64LTValidation
	}

	if !(t.Uint < 1) {
		return ErrLTUintLTValidation
	}

	if !(t.Uint8 < 1) {
		return ErrLTUint8LTValidation
	}

	if !(t.Uint16 < 1) {
		return ErrLTUint16LTValidation
	}

	if !(t.Uint32 < 1) {
		return ErrLTUint32LTValidation
	}

	if !(t.Uint64 < 1) {
		return ErrLTUint64LTValidation
	}

	if !(t.Uintptr < 1) {
		return ErrLTUintptrLTValidation
	}

	if !(t.Complex64 < 1) {
		return ErrLTComplex64LTValidation
	}

	if !(t.Complex128 < 1) {
		return ErrLTComplex128LTValidation
	}

	{
		t := t.Struct

		if !(t.Int < 1) {
			return ErrLTIntLTValidation
		}

	}

	return nil
}
