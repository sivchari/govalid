// Code generated by govalid; DO NOT EDIT.
package alphanum

import (
	"errors"
)

var (
	// ErrNilAlphanum is returned when the Alphanum is nil.
	ErrNilAlphanum = errors.New("input Alphanum is nil")

	isAlphaNumeric = func(s string) bool {
		for _, r := range s {
			if (r < 'a' || r > 'z') &&
				(r < 'A' || r > 'Z') &&
				(r < '0' || r > '9') {
				return false
			}
		}
		return s != ""
	}

	// ErrAlphanumProductCodeAlphanumValidation is returned when the AlphanumProductCode fails alphanum validation.
	ErrAlphanumProductCodeAlphanumValidation = errors.New("field AlphanumProductCode failed alphanum validation")

	// ErrAlphanumSerialNumberAlphanumValidation is returned when the AlphanumSerialNumber fails alphanum validation.
	ErrAlphanumSerialNumberAlphanumValidation = errors.New("field AlphanumSerialNumber failed alphanum validation")

	// ErrAlphanumUsernameAlphanumValidation is returned when the AlphanumUsername fails alphanum validation.
	ErrAlphanumUsernameAlphanumValidation = errors.New("field AlphanumUsername failed alphanum validation")
)

func ValidateAlphanum(t *Alphanum) error {
	if t == nil {
		return ErrNilAlphanum
	}

	if !isAlphaNumeric(t.ProductCode) {
		return ErrAlphanumProductCodeAlphanumValidation
	}

	if !isAlphaNumeric(t.SerialNumber) {
		return ErrAlphanumSerialNumberAlphanumValidation
	}

	if !isAlphaNumeric(t.Username) {
		return ErrAlphanumUsernameAlphanumValidation
	}

	return nil
}
