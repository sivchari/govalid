// Code generated by govalid; DO NOT EDIT.
package minitems

import (
	"errors"
)

var (
	// ErrNilMinItems is returned when the MinItems is nil.
	ErrNilMinItems = errors.New("input MinItems is nil")

	// ErrMinItemsSliceMinItemsValidation is the error returned when the length of the field is less than the minimum of 2.
	ErrMinItemsSliceMinItemsValidation = errors.New("field MinItemsSlice must have a minimum of 2 items")

	// ErrMinItemsArrayMinItemsValidation is the error returned when the length of the field is less than the minimum of 3.
	ErrMinItemsArrayMinItemsValidation = errors.New("field MinItemsArray must have a minimum of 3 items")

	// ErrMinItemsMapFieldMinItemsValidation is the error returned when the length of the field is less than the minimum of 1.
	ErrMinItemsMapFieldMinItemsValidation = errors.New("field MinItemsMapField must have a minimum of 1 items")

	// ErrMinItemsChanFieldMinItemsValidation is the error returned when the length of the field is less than the minimum of 2.
	ErrMinItemsChanFieldMinItemsValidation = errors.New("field MinItemsChanField must have a minimum of 2 items")

	// ErrMinItemsItemsMinItemsValidation is the error returned when the length of the field is less than the minimum of 1.
	ErrMinItemsItemsMinItemsValidation = errors.New("field MinItemsItems must have a minimum of 1 items")
)

func ValidateMinItems(t *MinItems) error {
	if t == nil {
		return ErrNilMinItems
	}

	if len(t.Slice) < 2 {
		return ErrMinItemsSliceMinItemsValidation
	}

	if len(t.Array) < 3 {
		return ErrMinItemsArrayMinItemsValidation
	}

	if len(t.MapField) < 1 {
		return ErrMinItemsMapFieldMinItemsValidation
	}

	if len(t.ChanField) < 2 {
		return ErrMinItemsChanFieldMinItemsValidation
	}

	{
		t := t.Struct

		if len(t.Items) < 1 {
			return ErrMinItemsItemsMinItemsValidation
		}

	}

	return nil
}
