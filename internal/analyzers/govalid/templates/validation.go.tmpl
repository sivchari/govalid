// Code generated by govalid; DO NOT EDIT.
package {{.PackageName}}

import (
	{{if .Metadata }}
	"errors"
	govaliderrors "github.com/sivchari/govalid/validation/errors"
	{{- range $pkg, $_ := .ImportPackages }}
	"{{ $pkg }}"
	{{- end }}
	{{- end -}}
)

var (
	// ErrNil{{.TypeName}} is returned when the {{.TypeName}} is nil.
	ErrNil{{.TypeName}} = errors.New("input {{.TypeName}} is nil")
{{- range .Metadata -}}
	{{- range .Validators -}}
		{{ if ne .Validate "" }}
			{{.Err}}
		{{ end -}}
	{{- end -}}
{{ end -}}
)

func Validate{{.TypeName}}(t *{{.TypeName}}) error {
	if t == nil {
	    return ErrNil{{.TypeName}}
	}

	var errs govaliderrors.ValidationErrors

	{{ $parentVariable := "" }}
	{{ range .Metadata -}}

		{{ if ne .ParentVariable "" }}
	    	{{ $parentVariable = .ParentVariable }}
		{{ end -}}

		{{ if and (ne $parentVariable "") ( .Validators ) -}}
	    	{
  			t := t.{{ $parentVariable }}
		{{ end -}}

		{{ range .Validators }}
			{{ if ne .Validate "" }}
				if {{.Validate}} {
  			  		err := {{.ErrVariable}}
  			  		err.Value = t.{{.FieldName}}
  			  		errs = append(errs, err)
				}
			{{ end }}
		{{ end }}

		{{ if and (ne $parentVariable "") ( .Validators ) -}}
			}
			{{ $parentVariable = "" }}
		{{ end -}}

	{{ end -}}

  if len(errs) > 0 {
  	  return errs
  }
  return nil
}
